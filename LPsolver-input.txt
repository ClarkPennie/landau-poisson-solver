# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# LPsolver-input.txt
# 
# Text file containing input variables to be read by GRVY in the Landau-
# Poisson solver code.
#
# ------------------------------------------------------------------------------

#--------------------------------------------
# Global input variable definitions
#--------------------------------------------

flag     = VariableEspilson_Test

nT       = 0 	                # Number of time-steps
Nx       = 12  	                # Number of space cells
Nv       = 8	                # Number of velocity cells in each direction
N        = 8 	                # Number of Fourier modes
nu       = 0.05                 # Value of (Knudsen number)^{-1}
dt       = 0.01                 # Size of each time-step

gamma    = -3                   # Value of gamma in collision kernel

#--------------------------------------------
# Boolean options to determine problem
#--------------------------------------------

# Options for initial conditions (choose one):
Damping          = False        # Landau Damping ICs
TwoStream        = False        # Two Stream ICs
FourHump         = False        # Four Hump ICs
TwoHump          = False        # Two Hump ICs
TwoHump_sin      = False        # Two Hump ICs from sin^2 perturbation
Doping           = True         # Non-uniform doping ICs

# Choose if running for the first time or a subsequent run:
First            = True         # Running for the first time with ICs
Second           = False        # Picking up from a previous run

# Choose if running the space homogeneous version:
Homogeneous      = False        # Run for the space homogeneous setting

# Choose if running with a self-consistent field or not:
NoField          = False        # Run without a field

# Choose how the collisions are being modelled:
FullandLinear    = False        # Include electron-ion collisions
LinearLandau     = True         # Run with Linear Landau operator Q(f,M)
MassConsOnly     = True         # Run with only conservation of mass

# Choose if modelling electrons or ions:
Electrons        = False        # Run the code to model electrons
Ions		 = True         # Run the code to model ions

#--------------------------------------------
# Parameters associated with certain ICs
#--------------------------------------------

[Damping]

IC_name  = 'Landau Damping'	# Name of problem associated to ICs
A_amp    = 0.2                  # Amplitude of the perturbation
k_wave   = 0.5			# Frequency of the perturbation
T_0      = 1.2                  # Variance of Maxwellian to be perturbed
rho_0    = 0.1                  # Mass of the Maxwellian used in v-space
Lv       = 5.25                 # Width of domain in v-space

[TwoStream]

IC_name  = 'Two Stream'         # Name of problem associated to ICs
A_amp    = 0.5                  # Amplitude of the perturbation
Lv       = 5.25                 # Width of domain in v-space
Lx       = 4.                   # Width of domain in x-space

[FourHump]

IC_name  = 'Four Hump'          # Name of problem associated to ICs
Lv       = 0.09                 # Width of domain in v-space
T_hump   = 0.00025	        # Variance of each of the four humps
shift    = 0.02	          	# Shift from zero of each of the four humps
rho_0    = 0.1                  # Mass of the Maxwellian used in v-space

[TwoHump]

IC_name  = 'Two Hump'           # Name of problem associated to ICs
Lv       = 5.25                 # Width of domain in v-space
T_hump   = 0.8  	        # Variance of each of the four humps
shift    = 0.8	          	# Shift from zero of each of the four humps

[TwoHump_sin]

IC_name  = 'Two Hump'           # Name of problem associated to ICs
Lv       = 5.25                 # Width of domain in v-space

[Doping]

IC_name  = 'Non-uniform Doping' # Name of problem associated to ICs
Lv       = 5.25                 # Width of domain in v-space
eps      = 0.1                  # Value of dielectric constant

# Parameters for the channel width, location and magnitude:
NL                     = 0.001  # Value of background density in lower regions
NH                     = 1      # Value of background density in higher regions
T_L                    = 0.4    # Temperature at left wall (if using Dirichlet BCs)
T_R                    = 0.4    # Temperature at right wall (if using Dirichlet BCs)
channel_denom          = 6	# Denominator for the channel fraction
channel_numer_left     = 4	# Left edge of channel is at (numer_left/denom)*Lx
channel_numer_right    = 5	# Right edge of channel is at (numer_right/denom)*Lx

# Choose the BCs to solve Poisson's equation with (choose one):
Pois_Dirichlet = True           # Use Dirichlet BCs
Pois_Neutrality = False         # Use charge neutrality BCs

# Mesh refinement parameters
MeshRefinement         = True   # Refine the mesh in the channel
Nx_loc                 = 4      # Number of refined space cells per global cell

#--------------------------------------------
# Name of file from previous run to pick up
#--------------------------------------------

[Second]

Name = U_nu0.05A0.2k0.5Nx8Lx12.5664Nv8Lv5.25SpectralN8dt0.01nT2_GRVY_Tests.dc
